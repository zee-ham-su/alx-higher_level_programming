Tests for matrix multiplication in 100-matrix_mul.py

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

TypeError - m_a must be a list
matrix_mul([], "soy Dora")
TypeError: m_a must be a list or m_b must be a list

TypeError - m_b must be a list
matrix_mul([[1, 2], [3, 4]], 5)
# Expected: TypeError: m_b must be a list

TypeError: m_b must be a list
>>> matrix_mul([[1, 2]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2]])
[[5], [11]]
...

ValueError - m_a and m_b can't be multiplied
matrix_mul([[1]], [[1, 2], [3, 4]])
ValueError: m_a and m_b can't be multiplied

...
ValueError: m_a can't be empty
>>> matrix_mul([[1, 2], [3, 4]], [[0, 0], [0, 0]])
[[0, 0], [0, 0]]
...
ValueError: m_b can't be empty
>>> matrix_mul([[1, "hola"]], [[3, 4], [5, 6]])
Traceback (most recent call last):
...
TypeError: m_a should contain only integers or floats
>>> matrix_mul([[1, 2]], [[3, 4], [5, "soy Dora"]])
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats
>>> matrix_mul([[1, 2], [3, 4], [5, 6, 7]], [[1, 2], [3, 4]])
Traceback (most recent call last):
...

TypeError - each row of m_a must be of the same size
matrix_mul([[1, 2], [3, 4], [5, 6, 7]], [[1, 2], [3, 4]])
TypeError: each row of m_a must be of the same size or each row of m_b must be of the same size
...

TypeError - each row of m_b must be of the same size
matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4], [5, 6, 7]])
# Expected: TypeError: each row of m_a must be of the same size or each row of m_b must be of the same size
